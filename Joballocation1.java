package ACO;



import ACO.DataCenter_Brokers;
import ACO.Vms;

import java.awt.Color;
import java.awt.Container;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.List;
import javax.swing.UIManager;
import org.cloudbus.cloudsim.Cloudlet;
import java.sql.*;

/**
 *
 * @author user
 */
public class Joballocation1 extends javax.swing.JFrame {
    public static ArrayList y=new ArrayList();
    public static ArrayList x=new ArrayList();
    public static ArrayList cDetails = Vms.cDetails;
    public static ArrayList vDetails = Vms.vDetails;
    public static ArrayList wt=new ArrayList();
//    public static ArrayList vmprio = PrivatSchl.vmpriority;
    public static org.cloudbus.cloudsim.DatacenterBroker[] broker = DataCenter_Brokers.bId;
//    public static ArrayList check = PrivatSchl.allvm;
    String k[];
    String k1[];
    ArrayList ad = new ArrayList();
    public static ArrayList alloca = new ArrayList();

//  public static ArrayList check =new ArrayList();
    /**
     * Creates new form Pribehavior
     */
    public Joballocation1() {
        initComponents();
        tp.setVisible(false);
        vm.setVisible(false);
        tkp.setVisible(true);
        vmm.setVisible(false);
        all.setVisible(false);
        tkp.setBounds(180, 480, 140, 40);
        seticon();
//         Container c = this. getContentPane()
        getContentPane().setBackground(Color.white);
    }
          public void seticon()
    {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/sim.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tkp = new javax.swing.JButton();
        vmm = new javax.swing.JButton();
        all = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tp = new javax.swing.JTextArea();
        vm = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Job_Allocation");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(700, 500));
        getContentPane().setLayout(null);

        tkp.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tkp.setText("TASK PRIORITY");
        tkp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tkpActionPerformed(evt);
            }
        });
        getContentPane().add(tkp);
        tkp.setBounds(180, 480, 140, 50);

        vmm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vmm.setText("VM MANAGER");
        vmm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vmmActionPerformed(evt);
            }
        });
        getContentPane().add(vmm);
        vmm.setBounds(370, 480, 140, 50);

        all.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        all.setText("ALLOCATION");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        getContentPane().add(all);
        all.setBounds(560, 480, 140, 50);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        tp.setColumns(20);
        tp.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        tp.setRows(5);
        jPanel1.add(tp);
        tp.setBounds(30, 30, 40, 40);

        vm.setColumns(20);
        vm.setFont(new java.awt.Font("Sylfaen", 0, 18)); // NOI18N
        vm.setRows(5);
        jPanel1.add(vm);
        vm.setBounds(660, 0, 70, 50);

        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(90, 80, 730, 300);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/3d_little_people_running_to_work_stock_photo_165400.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 370, 700, 340);

        jLabel1.setFont(new java.awt.Font("NSimSun", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Job Allocation For Virtual Machine");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(100, 20, 680, 50);

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("Proceed");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(750, 480, 120, 50);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 900, 600);

        setSize(new java.awt.Dimension(916, 638));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        try 
        {
            jTextArea4.append("Cloud_Let \t\t  Execution_Time \t\t VM \n\n");
            jTextArea4.append("*************************************************************************\n");
            String fin = tp.getText();
            String df[] = fin.split("\n");
            k = new String[df.length];
            k1 = new String[df.length];
            //            wlshow.setText("Arrived Work Load :"+"\n");
            for (int i = 0; i < df.length; i++) 
                {
                    String spl[] = df[i].split("\t");
                    k[i] = spl[1];
                    k1[i] = spl[0];
                //                wlshow.append(k1[i]+"\t"+k[i]+"\n");
                }
        } 
        catch (Exception e) 
        {
            System.out.println(e);
        }

        try 
        {

           
            Cloudlet cldlet = null;
            String h[] = vm.getText().split("\n");

            String ak[] = new String[h.length];
            String id[] = new String[h.length];
            for (int k = 0; k < ak.length; k++) 
            {

                String spl[] = h[k].split("\t");

                ak[k] = spl[1];
                id[k] = spl[0];

            }

            double j = 0;
            for (int i = 0; i < k.length; i++) {

                double cal = Double.valueOf(k[i]);
                double vv;
                int c = 0;

                //               jTextArea4.append(cldlet.getExecStartTime()+"\t");
                for (int j1 = 0; j1 < id.length; j1++) {

                    if (c == 0) {
                        double ca = Double.valueOf(ak[j1]);
                        if (cal < ca) {

                            vv = ca-cal;
                            
//                            
                            double v1=ca/cal;
                            ak[j1] = String.valueOf(vv);
                            System.out.println(ak[j1]);
                            c = 1;
                            ad.add(k1[i]);
                            jTextArea4.append(k1[i] + "\t\t" +v1 + "\t\t"+ "VM_"+id[j1] + "\n\n");
                            x.add(k1[i]);
                            y.add(v1);
                        
                        }
                        //
                    }
//                                       else
//                                           {
//                                                    double ca=Double.valueOf(ak[j1]);
//                                                   vv=ca/cal;
//                                                   ak[j1]=String.valueOf(vv);
//                                                   System.out.println(ak[j1]);
//                                                   c=1;
//                            jTextArea4.append("Cloud_Let"+k1[i] + "\t\t" + vv + "\t\t"+ "VM_"+id[j1] + "\n\n");
//                                               }

                }

            }
            System.out.println(ad);

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_allActionPerformed

    private void vmmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vmmActionPerformed

        try {
            List vmList = new ArrayList();
            //            ArrayList vDetails=new ArrayList();
            int tVms;
            double vmLoad, allVmLoad = 0;
            vm.setText("");
            for (int j = 0; j < broker.length; j++) {
                vmList = broker[j].getVmList();
                tVms = vmList.size();
                for (int i = 0; i < vmList.size(); i++) {
                    org.cloudbus.cloudsim.Vm h = (org.cloudbus.cloudsim.Vm) vmList.get(i);
                    vmLoad = h.getBw() + h.getRam() + h.getMips();
                    if (vmLoad == 0.0) {
                    } else {
                        vm.append(h.getId() + "\t" + vmLoad + "\n");
                    }
                }
            }
            all.setVisible(true);
            all.setBounds(560, 480, 140, 40);
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_vmmActionPerformed

    private void tkpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tkpActionPerformed
        //try
        //{
            //       jTextArea1.setText(" ");
            //       ArrayList ar=new ArrayList();
            //    for(Object ob:cDetails)
            //    {
                //        String cl=(String) ob;
                //        String[] sd;
                //           sd = cl.split("\t");
                //         ar.add(sd[3]+"\t"+sd[0]);
                //
                //
                //
                //    }
            //  Collections.sort(ar);
            //  for(Object temp: ar){
                //			System.out.println(temp);
                //                        jTextArea1.append((String) temp+"\n\n");
                //		}
            //
            //}
        //catch(Exception e)
        //{
            //    System.out.println(e);
            //}

//        try {
//            //            wlshow.append("Work Load"+"\t"+"Load "+"\n");
//            for (Object as : cDetails) {
//                String asd = (String) as;
//                String spl[] = asd.split("\t");
//                long b = Long.valueOf(spl[3]);
//                long c = Long.valueOf(spl[4]);
//                long e = Long.valueOf(spl[2]);
//                long d = b + c + e;
//                tp.append(spl[0] + "\t" + d + "\n");
//                //                check.add(spl[0] + "-" + d);
//            }
//        } catch (Exception e) {
//            System.out.println("Exception : " + e);
//        }
        try
        {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
            String sql="select * from cloud_pre1";
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next())
            {
               tp.append(rs.getString(1)+"\t"+rs.getString(2)+"\n");
            }
            
            
            vmm.setVisible(true);
            vmm.setBounds(370, 480, 140, 40);
            
            
        }
        catch(Exception e)
        {
            System.out.println(e);
        }

    }//GEN-LAST:event_tkpActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try
       {
           
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
            Statement st=con.createStatement();
             Statement st1=con.createStatement();
              Statement st2=con.createStatement();
            st.executeUpdate("drop table if exists fin");
            st.executeUpdate("create table fin(cloudlet varchar(50),dura double)");
            for(int i=0;i<=x.size();i++)
                {
                    String d = (String)x.get(i);
                    double g=(double)y.get(i);
                    st1.executeUpdate("insert into fin values ('" +d+ "','"+g+"')");
                }
//            for(int j=0;j<y.size();j++)
//            {
//                 double g=(double)y.get(j);
//                 st2.executeUpdate("update into fin  (dura) values ('"+g+"')");
//            }
      
       
       
       
       }
       catch(Exception e)
       {
           System.out.println(e);
       }
       
       
//       try
//       {
//        Class.forName("com.mysql.jdbc.Driver").newInstance();
//        java.sql.Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
//        Statement st=con.createStatement();
//        st.executeUpdate("drop table if exists fd");
//        st.executeUpdate("create table fd as select cloud_id,weight,@n := @n + 1 n from cloud_pre1,(SELECT @n := 0) m order by weight desc");
//           
//       }
//       catch(Exception e)
//       {
//           System.out.println(e);
//       }
         try
        {
       
            
        Class.forName("com.mysql.jdbc.Driver").newInstance();
        java.sql.Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
        Statement st=con.createStatement();
        String sql="select * from cloud_pre1"; 
        ResultSet rs=st.executeQuery(sql);
        while(rs.next())
        {
            int r=rs.getInt(3);
            System.out.println(r);
            wt.add(r);
        }
        
       
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        weighting_time d=new weighting_time();
       d.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      try
        {
            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
        }
        catch(Exception e)
        {
            
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Joballocation1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton all;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JButton tkp;
    private javax.swing.JTextArea tp;
    private javax.swing.JTextArea vm;
    private javax.swing.JButton vmm;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ACO;

import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import com.mysql.jdbc.Connection;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import static org.jfree.chart.ChartFactory.createPieChart3D;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
//import s;

/**
 *
 * @author EGC07
 */
public class weighting_time extends javax.swing.JFrame {
public static ArrayList x=Joballocation1.x;
public static ArrayList y=Joballocation1.y;

   public static ArrayList fns=Joballocation1.wt;
    public weighting_time() 
    {
        initComponents();
                setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/sim.png")));
   pa.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        a = new javax.swing.JLabel();
        mt = new javax.swing.JLabel();
        ft = new javax.swing.JLabel();
        gh = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        job = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pa = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setTitle("Flow Time & Make_Span");
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Serif", 0, 30)); // NOI18N
        jLabel1.setText("WEIGHTING AND FLOWTIME");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(220, 10, 510, 47);

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(700, 110, 140, 50);

        a.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        a.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(a);
        a.setBounds(200, 120, 210, 30);

        mt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mt.setText("MakeSpan Time");
        jPanel1.add(mt);
        mt.setBounds(420, 80, 120, 30);

        ft.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ft.setText("Flow Time");
        jPanel1.add(ft);
        ft.setBounds(200, 80, 90, 30);

        gh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        gh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(gh);
        gh.setBounds(420, 120, 210, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Total JOB's");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 80, 100, 30);

        job.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        job.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(job);
        job.setBounds(60, 120, 60, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/rams-dailyicon.gif"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(-80, 290, 400, 400);
        jPanel1.add(pa);
        pa.setBounds(320, 200, 570, 380);

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton2.setText("Performance Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(90, 240, 150, 50);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 900, 600);

        setSize(new java.awt.Dimension(916, 638));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
  double d;
  ArrayList ms=new ArrayList();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

int jo=x.size();
String df=Integer.toString(jo);
job.setText(df);
       

       
       
       //Flow time coding
       
       
       try
       {
           Double ar[]=new Double[y.size()];
           y.toArray(ar);
              for(int i=0;i<ar.length-1;i++)
        {
//           System.out.println(a[i]);
           
            if(ar[i]<ar[i+1])
           {
               double d=ar[i+1]-ar[i];
               System.out.println("true"+d);
               ms.add(d);
           }
            else
            {
                 double d=ar[i]-ar[i+1];
               System.out.println("false"+d);
               ms.add(d);
            }
        }
       
              
              
      
       double sum1=0.00;
       for(Object k:ms)
       {
          
            double t=(double)k;
            for(Object wg:fns)
            {
               int io=(Integer)wg; 
                sum1=sum1+t*io;
            }
           
       }
 
      System.out.println("total"+sum1);
      String sus=Double.toString(sum1);
      a.setText(sus);
        
       }
       catch(Exception e)
       {
           System.out.println(e);
       }
       
     try
         
       {
        double sum=0.0000;
       //Make span time code
         for(Object k:y)
       {
      
            d=(double)k;
            System.out.println("-----");
            System.out.println("kl"+d);

            sum=sum+d;
       }
       String s=Double.toString(sum);
       gh.setText(s);
       }
    
     
     catch(Exception e)
       {
           System.out.println(e);
       }
       a.setBackground(Color.green);
       gh.setBackground(Color.PINK);
       
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
pa.setVisible(true);
//try
//        {String query = "select * from fin";
//               JDBCCategoryDataset dataset = new JDBCCategoryDataset("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","com.mysql.jdbc.Driver",
//                                "root", "");
//
//                dataset.executeQuery(query);
//                JFreeChart chart = ChartFactory.createLineChart("Weighting Time", "CloudLet", "FlowTime",
//                                dataset, PlotOrientation.VERTICAL, true, true, false);
////              ChartPanel chartPanel = new ChartPanel(chart);
//               ChartPanel frame1=new ChartPanel(chart);
//            frame1.setVisible(true);
//            frame1.setBounds(10, 20,400,250);
//           pa.add(frame1);
//           frame1.setBackground(Color.white);
//            this.setVisible(false);
//            this.setVisible(true);
////                jPanel2(chart);
//        }
//        catch(Exception e)
//        {
//            System.out.println(e);
//        }




      try
        {
            
        Class.forName("com.mysql.jdbc.Driver").newInstance();
        java.sql.Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/aco?zeroDateTimeBehavior=convertToNull","root","");
        Statement st=con.createStatement();
        String sql="select * from fin"; 
         ResultSet rs=st.executeQuery(sql);
           DefaultPieDataset pieDataset = new DefaultPieDataset();
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         while(rs.next())
         {
          
              dataset.setValue(new Double(rs.getString(2)),"flowtime",rs.getString(1));
            pieDataset.setValue(rs.getString(1), new Double(rs.getString(2)));
//            pieDataset.setValue("Two", new Integer(20));
//            pieDataset.setValue("Three", new Integer(10));

           
         }
          JFreeChart chart = ChartFactory.createPieChart3D("Flow Time for Each job", pieDataset, true,true,true);
//            ChartFrame frame1=new ChartFrame("hai",chart);
            ChartPanel frame1=new ChartPanel(chart);
            frame1.setVisible(true);
            frame1.setBounds(10, 20,480,300);
            pa.add(frame1);
            this.setVisible(false);
            this.setVisible(true);
        

           
        
//          JFreeChart chart = ChartFactory.createPieChart3D("Flow Time for Each job","Cloudlet", "FlowTime", dataset,PlotOrientation.VERTICAL, false,true, false);
//          JFreeChart chart = ChartFactory..createPieChart3D("Flow Time for Each job",pieDataset,true,true, true); 
//         ChartPanel frame1=new ChartPanel(chart);
//          chart.setBackgroundPaint(Color.WHITE);
//          chart.getTitle().setPaint(Color.blue);
//          CategoryPlot p = chart.getCategoryPlot();
//          p.setRangeGridlinePaint(Color.red);
//          p.setBackgroundPaint(Color.LIGHT_GRAY);
//          ChartFrame frame1=new ChartFrame("Performance Evaluation",chart);
//          frame1.setVisible(true);
//               frame1.setBounds(10, 20,400,280);
//            pa.add(frame1);
//            this.setVisible(false);
//            this.setVisible(true);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        
          try
        {
            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
        }
        catch(Exception e)
        {
            
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new weighting_time().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a;
    private javax.swing.JLabel ft;
    private javax.swing.JLabel gh;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel job;
    private javax.swing.JLabel mt;
    private javax.swing.JPanel pa;
    // End of variables declaration//GEN-END:variables
}
